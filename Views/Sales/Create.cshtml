@model TestSkyProduct.Models.SalesModel

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<script>
    $(document).ready(function () {

    // Calcuate Totalamount and set into textbox
        $("#txtqty").change(function () {
            var obj = {};
            obj.pnumber = $("#ddlproductlist option:selected").val();
            obj.qty = $("#txtqty").val();
            
            $.ajax({
                type: "POST",
                url: "/Sales/GetTotalAmount",
                data: JSON.stringify(obj),
                dataType: "json",
                contentType: "application/json",
                success: function (data) {

                    if (data.length != 0)
                    {
                       $("#txttotalamount").val(data[0].TotalAmount);
                       

                    }
                   

                }
            });


        });

        //validation
        $("#btnsubmit").click(function () {

            if (($("#txtcustname").val() == " ")) {
                alert('Please fill the detail');
                return false;
            }
        });



    });
    
</script>



@using (Html.BeginForm("Create", "Sales", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
        <h4>Sales</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "control-label col-md-2", @id="txtcustname"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                
                @Html.DropDownListFor(model => model.ProductNumber, Model.ProductList, "Please Select Product", new { @class = "form-control", @id = "ddlproductlist" })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

      
        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", @id = "txtqty" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalAmount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalAmount, new { htmlAttributes = new { @class = "form-control" , @readonly= "readonly", @id="txttotalamount" } })
                @Html.ValidationMessageFor(model => model.TotalAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-primary" id="btnsubmit" />
            </div>
        </div>
    </div>
}


@{

    if (TempData["Message"] != null)
    {

        @Html.Raw(TempData["Message"])
    }


 }

